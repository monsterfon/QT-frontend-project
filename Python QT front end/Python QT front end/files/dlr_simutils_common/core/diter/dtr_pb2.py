# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dtr.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tdtr.proto\x12\x05\x64tr1d\"\xd7\x01\n\x0fModelParameters\x12.\n\x0fline_properties\x18\x01 \x02(\x0b\x32\x15.dtr1d.LineProperties\x12-\n\x0cmeasurements\x18\x02 \x03(\x0b\x32\x17.dtr1d.MeasurementPoint\x12\x35\n\x13\x63onstants_of_nature\x18\x03 \x02(\x0b\x32\x18.dtr1d.ConstantsOfNature\x12.\n\x0fnumerical_setup\x18\x04 \x02(\x0b\x32\x15.dtr1d.NumericalSetup\"\xee\x05\n\x0eLineProperties\x12\x31\n\x0einner_material\x18\x01 \x02(\x0b\x32\x19.dtr1d.MaterialProperties\x12\x31\n\x0eouter_material\x18\x02 \x02(\x0b\x32\x19.dtr1d.MaterialProperties\x12\x15\n\rline_altitude\x18\x03 \x02(\x01\x12\x12\n\nline_angle\x18\x04 \x02(\x01\x12\x1c\n\x14thermal_conductivity\x18\x05 \x02(\x01\x12\x19\n\x11num_outer_strands\x18\x06 \x02(\x01\x12\x1c\n\x14single_strand_radius\x18\x07 \x02(\x01\x12\x15\n\rwetted_factor\x18\x08 \x02(\x01\x12\x18\n\x10impinging_factor\x18\t \x02(\x01\x12\x17\n\x0frecovery_factor\x18\n \x02(\x01\x12\x13\n\x0bskin_effect\x18\x0b \x02(\x01\x12\x12\n\nemissivity\x18\x0c \x02(\x01\x12\x14\n\x0c\x61\x62sorptivity\x18\r \x02(\x01\x12 \n\x18rough_surface_correction\x18\x0e \x02(\x01\x12\x1b\n\x13maximal_temperature\x18\x0f \x02(\x01\x12O\n\x13thermal_current_def\x18\x10 \x02(\x0e\x32\x32.dtr1d.LineProperties.ThermalCurrentTemperatureDef\x12\x14\n\x0cnusselt_base\x18\x11 \x03(\x01\x12\x18\n\x10nusselt_exponent\x18\x12 \x03(\x01\x12\x46\n\x10\x63onvection_model\x18\x13 \x01(\x0e\x32%.dtr1d.LineProperties.ConvectionModel:\x05\x43IGRE\";\n\x1cThermalCurrentTemperatureDef\x12\x08\n\x04SKIN\x10\x00\x12\x08\n\x04\x43ORE\x10\x01\x12\x07\n\x03\x41VG\x10\x02\"&\n\x0f\x43onvectionModel\x12\t\n\x05\x43IGRE\x10\x00\x12\x08\n\x04IEEE\x10\x01\"\xc3\x01\n\x12MaterialProperties\x12\x0f\n\x07\x64\x65nsity\x18\x01 \x02(\x01\x12\x15\n\rspecific_heat\x18\x02 \x02(\x01\x12\x1b\n\x13specific_heat_alpha\x18\x03 \x02(\x01\x12\x19\n\x11resistivity_alpha\x18\x04 \x02(\x01\x12\x1d\n\x15\x65lectric_conductivity\x18\x05 \x02(\x01\x12\x0c\n\x04\x61rea\x18\x06 \x02(\x01\x12\x0e\n\x06radius\x18\x07 \x02(\x01\x12\x10\n\x08porosity\x18\x08 \x02(\x01\"\xf2\x01\n\x10MeasurementPoint\x12\x0c\n\x04time\x18\x01 \x02(\x01\x12\x1b\n\x13\x61mbient_temperature\x18\x02 \x02(\x01\x12\x1b\n\x13\x64roplet_temperature\x18\x03 \x02(\x01\x12\x15\n\rwind_velocity\x18\x05 \x02(\x01\x12\x12\n\nwind_angle\x18\x06 \x02(\x01\x12\x10\n\x08pressure\x18\x07 \x02(\x01\x12\x11\n\train_rate\x18\x08 \x02(\x01\x12\x10\n\x08humidity\x18\t \x02(\x01\x12\x18\n\x10solar_irradiance\x18\n \x02(\x01\x12\x1a\n\x12\x65lectrical_current\x18\x0b \x02(\x01\"\xc1\x01\n\x11\x43onstantsOfNature\x12$\n\x05water\x18\x01 \x02(\x0b\x32\x15.dtr1d.WaterConstants\x12 \n\x03\x61ir\x18\x02 \x02(\x0b\x32\x13.dtr1d.AirConstants\x12\x17\n\x0fstefan_constant\x18\x03 \x02(\x01\x12\x18\n\x10molar_mass_ratio\x18\x04 \x02(\x01\x12\x14\n\x0cgas_constant\x18\x05 \x02(\x01\x12\x1b\n\x13kelvin_celsius_diff\x18\x06 \x02(\x01\"\xb7\x01\n\x0eWaterConstants\x12\x0f\n\x07\x64\x65nsity\x18\x01 \x02(\x01\x12\x1a\n\x12latent_heat_fusion\x18\x02 \x02(\x01\x12\x1f\n\x17latent_heat_evaporation\x18\x03 \x02(\x01\x12\x1f\n\x17latent_heat_sublimation\x18\x04 \x02(\x01\x12\x19\n\x11specific_heat_ice\x18\x05 \x02(\x01\x12\x1b\n\x13specific_heat_water\x18\x06 \x02(\x01\"g\n\x0c\x41irConstants\x12\x15\n\rspecific_heat\x18\x01 \x02(\x01\x12\x0f\n\x07\x64\x65nsity\x18\x02 \x01(\x01\x12\x11\n\tviscosity\x18\x03 \x01(\x01\x12\x1c\n\x14thermal_conductivity\x18\x04 \x01(\x01\"\xca\x02\n\x0eNumericalSetup\x12\x11\n\tnum_nodes\x18\x01 \x02(\x05\x12\x11\n\ttime_step\x18\x02 \x02(\x01\x12\x19\n\x11steady_state_crit\x18\x03 \x02(\x01\x12\x12\n\nstart_time\x18\x04 \x01(\x01\x12\x10\n\x08\x65nd_time\x18\x05 \x01(\x01\x12 \n\x18initial_skin_temperature\x18\x06 \x01(\x01\x12(\n initial_temperature_distribution\x18\x07 \x03(\x01\x12\"\n\x1ainitial_electrical_current\x18\x08 \x01(\x01\x12\x1b\n\x13radial_distribution\x18\t \x02(\x08\x12\x13\n\x0boutput_rate\x18\n \x02(\x05\x12\x1a\n\x12presimulation_time\x18\x0b \x02(\x01\x12\x13\n\x0b\x64\x65\x62ug_level\x18\x0c \x02(\x05\"\xe0\x01\n\x13InnerNumericalSetup\x12\x11\n\tnum_nodes\x18\x01 \x01(\x05\x12\x11\n\ttime_step\x18\x02 \x01(\x01\x12\x19\n\x11steady_state_crit\x18\x03 \x01(\x01\x12\x10\n\x08\x64uration\x18\x05 \x02(\x01\x12\x1b\n\x13radial_distribution\x18\x08 \x01(\x08\x12\x13\n\x0b\x64\x65\x62ug_level\x18\x0b \x01(\x05\x12 \n\x18initial_skin_temperature\x18\x0c \x01(\x01\x12\"\n\x1ainitial_electrical_current\x18\r \x01(\x01\"\xe8\x01\n\x19NonlinearSolverParameters\x12\x13\n\x0bmin_current\x18\x01 \x02(\x01\x12\x13\n\x0bmax_current\x18\x02 \x02(\x01\x12\x19\n\x11\x63urrent_precision\x18\x03 \x02(\x01\x12\x1d\n\x15temperature_precision\x18\x04 \x02(\x01\x12:\n\x16inner_simulation_setup\x18\x05 \x02(\x0b\x32\x1a.dtr1d.InnerNumericalSetup\x12\x16\n\x0emax_iterations\x18\x06 \x02(\x05\x12\x13\n\x0b\x64\x65\x62ug_level\x18\x07 \x02(\x05\"\xe9\x02\n\x11SimulationRequest\x12Q\n\x18\x63urrent_computation_mode\x18\x01 \x02(\x0e\x32/.dtr1d.SimulationRequest.CurrentComputationMode\x12*\n\nparameters\x18\x02 \x02(\x0b\x32\x16.dtr1d.ModelParameters\x12:\n\x16time_to_overheat_setup\x18\x03 \x02(\x0b\x32\x1a.dtr1d.InnerNumericalSetup\x12\x45\n\x1bnonlinear_solver_parameters\x18\x04 \x01(\x0b\x32 .dtr1d.NonlinearSolverParameters\x12\x15\n\routput_folder\x18\x05 \x02(\t\";\n\x16\x43urrentComputationMode\x12\x0f\n\x0b\x43IGRE_MODEL\x10\x00\x12\x10\n\x0cRADIAL_MODEL\x10\x01\"\xa5\x03\n\x12SimulationResponse\x12\x0c\n\x04time\x18\x01 \x03(\x01\x12\x18\n\x10\x63ore_temperature\x18\x02 \x03(\x01\x12\x18\n\x10skin_temperature\x18\x03 \x03(\x01\x12\x17\n\x0f\x61vg_temperature\x18\x04 \x03(\x01\x12\x1b\n\x13heat_flux_radiation\x18\x05 \x03(\x01\x12\x1c\n\x14heat_flux_convection\x18\x06 \x03(\x01\x12\x17\n\x0fheat_flux_solar\x18\x07 \x03(\x01\x12\x1a\n\x12heat_flux_friction\x18\x08 \x03(\x01\x12\x1b\n\x13heat_flux_impinging\x18\t \x03(\x01\x12\x1d\n\x15heat_flux_evaporation\x18\n \x03(\x01\x12\x1f\n\x17heat_flux_joule_heating\x18\x0b \x03(\x01\x12\"\n\x1athermal_electrical_current\x18\x0c \x03(\x01\x12\x18\n\x10time_to_overheat\x18\r \x03(\x01\x12\x19\n\x11\x66inal_temperature\x18\x0e \x03(\x01\x12\x0e\n\x06radius\x18\x0f \x03(\x01*\xa7\x07\n\x05\x45rror\x12\x0c\n\x08NO_ERROR\x10\x00\x12\x18\n\x14NOT_ENOUGH_ARGUMENTS\x10\x01\x12\x16\n\x12\x45RROR_OPENING_FILE\x10\x02\x12\x1a\n\x16\x46\x41ILED_PARSING_MESSAGE\x10\x03\x12#\n\x1fMISSING_CURRENT_SIMULATION_TYPE\x10\x04\x12 \n\x1cMISSING_BISECTION_PARAMETERS\x10\x05\x12\x1d\n\x19NUMBER_OF_NODES_TOO_SMALL\x10\x06\x12\x1e\n\x1aNEGATIVE_OR_ZERO_TIME_STEP\x10\x07\x12\x18\n\x14MISSING_MEASUREMENTS\x10\x08\x12\x1e\n\x1aNON_INCREASING_TIME_STAMPS\x10\t\x12\x18\n\x14START_TIME_TOO_SMALL\x10\n\x12\'\n#END_TIME_BEFORE_OR_EQUAL_START_TIME\x10\x0b\x12!\n\x1d\x42ISECTION_PRECISION_TOO_SMALL\x10\x0c\x12\x31\n-BISECTION_LOW_NOT_SMALLER_THAN_BISECTION_HIGH\x10\r\x12%\n!TARGET_TEMPERATURE_NOT_ACHIEVABLE\x10\x0e\x12-\n)TARGET_TEMPERATURE_OUT_OF_MODELLING_RANGE\x10\x0f\x12\x30\n,MAX_NUMBER_OF_BISECTION_ITERATIONS_TOO_SMALL\x10\x10\x12\x1a\n\x16\x45RROR_DURING_EXECUTION\x10\x11\x12!\n\x1dNO_MEASUREMENTS_IN_TIME_RANGE\x10\x12\x12*\n&PRESIMULATION_TIME_MUST_BE_NONNEGATIVE\x10\x13\x12\x19\n\x15NUSSELT_BASE_MISMATCH\x10\x14\x12\x1d\n\x19NUSSELT_EXPONENT_MISMATCH\x10\x15\x12\x1a\n\x16INVALID_INPUT_FILENAME\x10\x16\x12\x1f\n\x1b\x46\x41ILED_CREATING_OUTPUT_FILE\x10\x17\x12\x1c\n\x18\x46\x41ILED_CREATING_LOG_FILE\x10\x18\x12\x13\n\x0fNOT_IMPLEMENTED\x10\x19\x12\x11\n\rINVALID_RADII\x10\x1a\x12\x1f\n\x1b\x41\x42NORMAL_ELECTRICAL_CURRENT\x10\x1b\x12\x18\n\x14INVALID_WEATHER_DATA\x10\x1c')

_ERROR = DESCRIPTOR.enum_types_by_name['Error']
Error = enum_type_wrapper.EnumTypeWrapper(_ERROR)
NO_ERROR = 0
NOT_ENOUGH_ARGUMENTS = 1
ERROR_OPENING_FILE = 2
FAILED_PARSING_MESSAGE = 3
MISSING_CURRENT_SIMULATION_TYPE = 4
MISSING_BISECTION_PARAMETERS = 5
NUMBER_OF_NODES_TOO_SMALL = 6
NEGATIVE_OR_ZERO_TIME_STEP = 7
MISSING_MEASUREMENTS = 8
NON_INCREASING_TIME_STAMPS = 9
START_TIME_TOO_SMALL = 10
END_TIME_BEFORE_OR_EQUAL_START_TIME = 11
BISECTION_PRECISION_TOO_SMALL = 12
BISECTION_LOW_NOT_SMALLER_THAN_BISECTION_HIGH = 13
TARGET_TEMPERATURE_NOT_ACHIEVABLE = 14
TARGET_TEMPERATURE_OUT_OF_MODELLING_RANGE = 15
MAX_NUMBER_OF_BISECTION_ITERATIONS_TOO_SMALL = 16
ERROR_DURING_EXECUTION = 17
NO_MEASUREMENTS_IN_TIME_RANGE = 18
PRESIMULATION_TIME_MUST_BE_NONNEGATIVE = 19
NUSSELT_BASE_MISMATCH = 20
NUSSELT_EXPONENT_MISMATCH = 21
INVALID_INPUT_FILENAME = 22
FAILED_CREATING_OUTPUT_FILE = 23
FAILED_CREATING_LOG_FILE = 24
NOT_IMPLEMENTED = 25
INVALID_RADII = 26
ABNORMAL_ELECTRICAL_CURRENT = 27
INVALID_WEATHER_DATA = 28


_MODELPARAMETERS = DESCRIPTOR.message_types_by_name['ModelParameters']
_LINEPROPERTIES = DESCRIPTOR.message_types_by_name['LineProperties']
_MATERIALPROPERTIES = DESCRIPTOR.message_types_by_name['MaterialProperties']
_MEASUREMENTPOINT = DESCRIPTOR.message_types_by_name['MeasurementPoint']
_CONSTANTSOFNATURE = DESCRIPTOR.message_types_by_name['ConstantsOfNature']
_WATERCONSTANTS = DESCRIPTOR.message_types_by_name['WaterConstants']
_AIRCONSTANTS = DESCRIPTOR.message_types_by_name['AirConstants']
_NUMERICALSETUP = DESCRIPTOR.message_types_by_name['NumericalSetup']
_INNERNUMERICALSETUP = DESCRIPTOR.message_types_by_name['InnerNumericalSetup']
_NONLINEARSOLVERPARAMETERS = DESCRIPTOR.message_types_by_name['NonlinearSolverParameters']
_SIMULATIONREQUEST = DESCRIPTOR.message_types_by_name['SimulationRequest']
_SIMULATIONRESPONSE = DESCRIPTOR.message_types_by_name['SimulationResponse']
_LINEPROPERTIES_THERMALCURRENTTEMPERATUREDEF = _LINEPROPERTIES.enum_types_by_name['ThermalCurrentTemperatureDef']
_LINEPROPERTIES_CONVECTIONMODEL = _LINEPROPERTIES.enum_types_by_name['ConvectionModel']
_SIMULATIONREQUEST_CURRENTCOMPUTATIONMODE = _SIMULATIONREQUEST.enum_types_by_name['CurrentComputationMode']
ModelParameters = _reflection.GeneratedProtocolMessageType('ModelParameters', (_message.Message,), {
  'DESCRIPTOR' : _MODELPARAMETERS,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.ModelParameters)
  })
_sym_db.RegisterMessage(ModelParameters)

LineProperties = _reflection.GeneratedProtocolMessageType('LineProperties', (_message.Message,), {
  'DESCRIPTOR' : _LINEPROPERTIES,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.LineProperties)
  })
_sym_db.RegisterMessage(LineProperties)

MaterialProperties = _reflection.GeneratedProtocolMessageType('MaterialProperties', (_message.Message,), {
  'DESCRIPTOR' : _MATERIALPROPERTIES,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.MaterialProperties)
  })
_sym_db.RegisterMessage(MaterialProperties)

MeasurementPoint = _reflection.GeneratedProtocolMessageType('MeasurementPoint', (_message.Message,), {
  'DESCRIPTOR' : _MEASUREMENTPOINT,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.MeasurementPoint)
  })
_sym_db.RegisterMessage(MeasurementPoint)

ConstantsOfNature = _reflection.GeneratedProtocolMessageType('ConstantsOfNature', (_message.Message,), {
  'DESCRIPTOR' : _CONSTANTSOFNATURE,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.ConstantsOfNature)
  })
_sym_db.RegisterMessage(ConstantsOfNature)

WaterConstants = _reflection.GeneratedProtocolMessageType('WaterConstants', (_message.Message,), {
  'DESCRIPTOR' : _WATERCONSTANTS,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.WaterConstants)
  })
_sym_db.RegisterMessage(WaterConstants)

AirConstants = _reflection.GeneratedProtocolMessageType('AirConstants', (_message.Message,), {
  'DESCRIPTOR' : _AIRCONSTANTS,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.AirConstants)
  })
_sym_db.RegisterMessage(AirConstants)

NumericalSetup = _reflection.GeneratedProtocolMessageType('NumericalSetup', (_message.Message,), {
  'DESCRIPTOR' : _NUMERICALSETUP,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.NumericalSetup)
  })
_sym_db.RegisterMessage(NumericalSetup)

InnerNumericalSetup = _reflection.GeneratedProtocolMessageType('InnerNumericalSetup', (_message.Message,), {
  'DESCRIPTOR' : _INNERNUMERICALSETUP,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.InnerNumericalSetup)
  })
_sym_db.RegisterMessage(InnerNumericalSetup)

NonlinearSolverParameters = _reflection.GeneratedProtocolMessageType('NonlinearSolverParameters', (_message.Message,), {
  'DESCRIPTOR' : _NONLINEARSOLVERPARAMETERS,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.NonlinearSolverParameters)
  })
_sym_db.RegisterMessage(NonlinearSolverParameters)

SimulationRequest = _reflection.GeneratedProtocolMessageType('SimulationRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIMULATIONREQUEST,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.SimulationRequest)
  })
_sym_db.RegisterMessage(SimulationRequest)

SimulationResponse = _reflection.GeneratedProtocolMessageType('SimulationResponse', (_message.Message,), {
  'DESCRIPTOR' : _SIMULATIONRESPONSE,
  '__module__' : 'dtr_pb2'
  # @@protoc_insertion_point(class_scope:dtr1d.SimulationResponse)
  })
_sym_db.RegisterMessage(SimulationResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ERROR._serialized_start=3505
  _ERROR._serialized_end=4440
  _MODELPARAMETERS._serialized_start=21
  _MODELPARAMETERS._serialized_end=236
  _LINEPROPERTIES._serialized_start=239
  _LINEPROPERTIES._serialized_end=989
  _LINEPROPERTIES_THERMALCURRENTTEMPERATUREDEF._serialized_start=890
  _LINEPROPERTIES_THERMALCURRENTTEMPERATUREDEF._serialized_end=949
  _LINEPROPERTIES_CONVECTIONMODEL._serialized_start=951
  _LINEPROPERTIES_CONVECTIONMODEL._serialized_end=989
  _MATERIALPROPERTIES._serialized_start=992
  _MATERIALPROPERTIES._serialized_end=1187
  _MEASUREMENTPOINT._serialized_start=1190
  _MEASUREMENTPOINT._serialized_end=1432
  _CONSTANTSOFNATURE._serialized_start=1435
  _CONSTANTSOFNATURE._serialized_end=1628
  _WATERCONSTANTS._serialized_start=1631
  _WATERCONSTANTS._serialized_end=1814
  _AIRCONSTANTS._serialized_start=1816
  _AIRCONSTANTS._serialized_end=1919
  _NUMERICALSETUP._serialized_start=1922
  _NUMERICALSETUP._serialized_end=2252
  _INNERNUMERICALSETUP._serialized_start=2255
  _INNERNUMERICALSETUP._serialized_end=2479
  _NONLINEARSOLVERPARAMETERS._serialized_start=2482
  _NONLINEARSOLVERPARAMETERS._serialized_end=2714
  _SIMULATIONREQUEST._serialized_start=2717
  _SIMULATIONREQUEST._serialized_end=3078
  _SIMULATIONREQUEST_CURRENTCOMPUTATIONMODE._serialized_start=3019
  _SIMULATIONREQUEST_CURRENTCOMPUTATIONMODE._serialized_end=3078
  _SIMULATIONRESPONSE._serialized_start=3081
  _SIMULATIONRESPONSE._serialized_end=3502
# @@protoc_insertion_point(module_scope)
